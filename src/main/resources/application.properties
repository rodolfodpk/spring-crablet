spring.application.name=java-crablet
server.port=8080
# HTTP/2 Configuration - Enable for better performance and multiplexing
server.http2.enabled=true
# JDBC PostgreSQL Configuration with HikariCP
spring.datasource.url=jdbc:postgresql://localhost:5432/crablet
spring.datasource.username=crablet
spring.datasource.password=crablet
# HikariCP Connection Pool Configuration - Optimized for high concurrency
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000
# Prepared Statement Caching - Performance optimization
# Caches prepared statements to avoid re-parsing and re-planning queries
# Expected improvement: 10-20% reduction in query latency for repeated queries
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers,retries,timelimiters,ratelimiters,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.prometheus.enabled=true
# Logging Configuration
logging.level.com.crablet=DEBUG
logging.level.org.springframework.jdbc=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.org.flywaydb=DEBUG
# Virtual Threads Configuration
spring.threads.virtual.enabled=true
# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
# Resilience4j Configuration
resilience4j.circuitbreaker.instances.database.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.database.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.database.sliding-window-size=10
resilience4j.circuitbreaker.instances.database.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.database.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.database.sliding-window-type=COUNT_BASED
resilience4j.retry.instances.database.max-attempts=3
resilience4j.retry.instances.database.wait-duration=1s
resilience4j.retry.instances.database.retry-exceptions=org.springframework.dao.DataAccessException,org.postgresql.util.PSQLException,java.sql.SQLException
resilience4j.timelimiter.instances.database.timeout-duration=15s
resilience4j.timelimiter.instances.database.cancel-running-future=true
# Rate Limiter Configuration
# Global API rate limiter - 1000 requests per second across all endpoints
resilience4j.ratelimiter.instances.globalApi.limit-for-period=1000
resilience4j.ratelimiter.instances.globalApi.limit-refresh-period=1s
resilience4j.ratelimiter.instances.globalApi.timeout-duration=0ms
# Enable Resilience4j metrics
management.metrics.enable.resilience4j=true
# Micrometer Prometheus Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=PT15S
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.percentiles-histogram.hikaricp.connections=true
management.metrics.distribution.percentiles.hikaricp.connections=0.5,0.95,0.99
# JVM Metrics Configuration
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.process=true
management.metrics.enable.logback=true
# HikariCP Metrics Configuration
management.metrics.enable.hikaricp=true
# EventStore Configuration
crablet.eventstore.persist-commands=true
crablet.eventstore.transaction-isolation=READ_COMMITTED

# Outbox Configuration
crablet.outbox.enabled=false
crablet.outbox.batch-size=100
crablet.outbox.fetch-size=100
crablet.outbox.polling-interval-ms=1000
crablet.outbox.max-retries=3
crablet.outbox.retry-delay-ms=5000
crablet.outbox.lock-strategy=PER_TOPIC_PUBLISHER

# Define topics with explicit publisher mapping
crablet.outbox.topics.default-topic.required-tags=
crablet.outbox.topics.default-topic.publishers=LogPublisher,TestPublisher

crablet.outbox.topics.wallet-events.required-tags=walletId
crablet.outbox.topics.wallet-events.publishers=LogPublisher,StatisticsPublisher

crablet.outbox.topics.user-events.required-tags=userId
crablet.outbox.topics.user-events.publishers=LogPublisher

crablet.outbox.topics.payment-events.any-of-tags=paymentId,transferId
crablet.outbox.topics.payment-events.publishers=StatisticsPublisher

# Enable publishers
crablet.outbox.publishers.log.enabled=true
crablet.outbox.publishers.statistics.enabled=false
crablet.outbox.publishers.statistics.log-interval-seconds=10
# crablet.outbox.publishers.kafka.enabled=false
# crablet.outbox.publishers.webhook.enabled=false

# Global statistics (enabled by default)
crablet.outbox.global-statistics.enabled=true
crablet.outbox.global-statistics.log-interval-seconds=30
crablet.outbox.global-statistics.log-level=INFO

# Enable detailed metrics
management.metrics.distribution.percentiles-histogram.outbox.publishing.duration=true
management.metrics.distribution.percentiles.outbox.publishing.duration=0.5,0.95,0.99
crablet.eventstore.fetch-size=1000

